spring:
  application:
    name: springboot-practice
  datasource:
    url: jdbc:h2:mem:spring_boot;DATABASE_TO_UPPER=false;MODE=MYSQL;
    platform: h2
    schema: classpath:db/schema.sql
    data: classpath:db/data.sql
    username: root
    password: password
  #    druid:
  #      # 最大连接
  #      max-active: 20
  #      # 初始连接数
  #      initial-size: 1
  #      # 获取连接最大等待时间
  #      max-wait: 60000
  #      # 最小连接数
  #      min-idle: 1
  #      # 监控统计用的filter:stat
  #      # 日志用的filter:log4j
  #      # 防御sql注入的filter:wall
  #      filters: stat,wall,slf4j
  #      # Destroy线程会检测连接的间隔时间
  #      time-between-eviction-runs-millis: 60000
  #      # 保持空闲连接不被驱逐最少时间
  #      min-evictable-idle-time-millis: 300000
  #      test-while-idle: true
  #      test-on-borrow: false
  #      test-on-return: false
  #      # 缓存ps，mysql建议关闭
  #      pool-prepared-statements: false
  #      max-open-prepared-statements: 20
  #      async-init: true
  h2:
    console:
      enabled: true
  rabbitmq:
    host: localhost
    port: 5672

# 自动配置
hello-world:
  enabled: true
  name: 'Foo'
  age: 20
  sex: 'm'

# 分页助手
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true

# mybatis
mybatis:
  mapper-locations: classpath:cn/com/springboot/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# 日志
logging:
  level:
    root: info
    org.springframework.jdbc.core.JdbcTemplate: debug
    cn.com.springboot: debug
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%t]){faint} %clr(%-40.40logger{39}){cyan}[lineno:%line]    %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
